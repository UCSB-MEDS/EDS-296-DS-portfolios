---
format: 
  revealjs:
    slide-number: true
    # code-link: true
    highlight-style: a11y
    chalkboard: true
    theme: 
      - ../../meds-slides-styles.scss
editor_options: 
  chunk_output_type: console
---

## {#title-slide data-menu-title="Title Slide" background="#053660"} 

[EDS 296: Data Science Portfolios]{.custom-title}

[*GitHub Tools*]{.custom-subtitle}

<hr class="hr-teal">

[November 8th, 2024]{.custom-subtitle3}

---

## {#show-skills data-menu-title="Demonstrate by doing"} 

[Demonstrate by doing]{.slide-title}

<hr>

GitHub provides *many* cool project management features that facilitate organization, collaboration, coding, and building workflows. By using these tools (while working solo *and* while working with others), you can demonstrate your technical and programming proficiencies.

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
#| fig-alt: "Four little monsters on grass support another monster starting their climb up a rock face. The climberâ€™s harness is labeled 'Coder', the belayer wears a harness labeled 'Code review', two others consulting a book and route map wear caps labeled 'Documentation' and 'Reuse', and another brings a box labeled 'Project management and snacks'."
knitr::include_graphics("images/horst-github-monsters.png")
```

::: {.footer}
Art by [Allison Horst](https://allisonhorst.com/){target="_blank"}
:::

---

## {#issues-start data-menu-title="GitHub Issues (start)" background="#047C90"} 

<div class="vertical-center center-text">
<p class="custom-subtitle bottombr">Track ideas & TODOs using GitHub issues</p>
</div>

---

## {#add-issue data-menu-title="Adding issues"} 

[Add a new issue from a repo's *Issues* tab]{.slide-title}

<hr>

>*"GitHub Issues are items you can create in a repository to plan, discuss and track work. Issues are simple to create and flexible to suit a variety of scenarios. You can use issues to **track work, give or receive feedback, collaborate on ideas or tasks, and efficiently communicate with others**."*

[**A few helpful features:**]{.body-text-m}

- [create task lists](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/about-task-lists){target="_blank"} & [convert individual tasks to issues](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/about-task-lists#about-issue-task-lists){target="_blank"}
- [attach files](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/attaching-files){target="_blank"}
- [add permalinks](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-a-permanent-link-to-a-code-snippet){target="_blank"}
- [add labels](https://docs.github.com/en/issues/tracking-your-work-with-issues/quickstart#adding-labels){target="_blank"}
- [assign users](https://docs.github.com/en/issues/tracking-your-work-with-issues/assigning-issues-and-pull-requests-to-other-github-users){target="_blank"}
- [reference issues in other issues, commits, PRs](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue){target="_blank"}
- [configure issue templates](https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository){target="_blank"}

::: {.footer}
Learn more by exploring [GitHub Docs](https://docs.github.com/en/issues/tracking-your-work-with-issues/about-issues){target="_blank"}
:::

---

## {#issues-screenshot data-menu-title="Issue screenshot"} 

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/example-issue.png")
```

::: {.footer}
Explore some real issues on the very real [ggplot2 repository](https://github.com/tidyverse/ggplot2/issues){target="_blank"}
:::

---

## {#use-issues data-menu-title="When to use issues"} 

[When should I use issues?]{.slide-title}

<hr>

<br>

[***Issues are a useful and valuable tool for tracking TODOs, jotting down ideas, recording bugs, etc., regardless of whether you're working alone or with collaborators.***]{.body-text-m}

<br>

. . . 

Like most things, it's great to **put some care and thought into writing an issue** (*especially* when collaborating or contributing thoughts to a public project e.g. [ggplot2](https://github.com/tidyverse/ggplot2/issues){target="_blank"}). . .

<br>

. . . 

. . . *but* I'd also argue that **a hasty issue on a personal project can still go a long way** in helping you remember a helpful resource, or that idea that popped into your mind at a time you couldn't devote much attention to it.

---

## {#projects-start data-menu-title="GitHub Projects (start)" background="#047C90"} 

<div class="vertical-center center-text">
<p class="custom-subtitle bottombr">Organize and prioritize issues (and pull requests) using GitHub projects</p>
</div>

---

## {#projects data-menu-title="Projects"} 

[Create a project from your profile's *Projects* tab]{.slide-title2}

<hr>

>*"Projects are an **adaptable collection of items** that stay up-to-date with GitHub data. Your projects can **track issues, pull requests, and ideas that you note down**. You can add custom fields and create views for specific purposes."*

[**A few helpful features:**]{.body-text-m}

- [add issues or pull requests](https://docs.github.com/en/issues/planning-and-tracking-with-projects/managing-items-in-your-project/adding-items-to-your-project){target="_blank"} (from multiple repos) to the same project
- [change and / or customize your project layout](https://docs.github.com/en/issues/planning-and-tracking-with-projects/customizing-views-in-your-project/changing-the-layout-of-a-view){target="_blank"} (you may also add multiple views)
- [link projects to relevant repositories](https://docs.github.com/en/issues/planning-and-tracking-with-projects/managing-your-project/adding-your-project-to-a-repository){target="_blank"}
- [manage access (for organization-level projects)](https://docs.github.com/en/issues/planning-and-tracking-with-projects/managing-your-project/managing-access-to-your-projects){target="_blank"}

::: {.footer}
Learn more by exploring [GitHub Docs](https://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects){target="_blank"}
:::

--- 

## {#projects-screenshot data-menu-title="Projects screenshot"} 

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/sam-project.png")
```

::: {.footer}
An example project for [my personal projects](https://github.com/users/samanthacsik/projects/3/views/1){target="_blank"}. 
:::

---

## {#use-projects data-menu-title="When to use projects"} 

[When should I use projects?]{.slide-title}

<hr>

<br>

[***If you use issues, projects may offer an additional helpful way to organize your tasks.***]{.body-text-m}

<br>

. . .

Code is oftentimes spread across **multiple repositories** (capstones & GPs are an excellent examples of this!) -- projects can be particularly **helpful for tracking TODOs and progress across them.**


<br>

. . . 

**Projects are not *required*** -- you can decide if they are a helpful tool for you / your team.

---

## {#orgs-start data-menu-title="GitHub Organizations (start)" background="#047C90"} 

<div class="vertical-center center-text">
<p class="custom-subtitle bottombr">Collaborate with teams across shared projects (repos) using GitHub organizations</p>
</div>

---

## {#GH-orgs data-menu-title="GitHub Organizations"} 

[Create an organization from your GitHub profile]{.slide-title2}

<hr>

>*"Organizations are **shared accounts** where businesses and open-source projects can **collaborate across many projects at once**, with sophisticated security and administrative features."*

<br>

Click on the **Create new** ("+") button or by clicking on your profile image (top right corner) > Your organizations > New organization. *Choose the "free" option.*

<br>

[**A few helpful features:**]{.body-text-m}

- [invite users](https://docs.github.com/en/organizations/managing-membership-in-your-organization/inviting-users-to-join-your-organization){target="_blank"}
- [assign roles](https://docs.github.com/en/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles){target="_blank"}
- [create](https://docs.github.com/en/organizations/organizing-members-into-teams/creating-a-team){target="_blank"} and [add members](https://docs.github.com/en/organizations/organizing-members-into-teams/adding-organization-members-to-a-team){target="_blank"} to teams
- [customize your organization's profile](https://docs.github.com/en/organizations/collaborating-with-groups-in-organizations/customizing-your-organizations-profile){target="_blank"} (revisit the [README guidelines](https://ucsb-meds.github.io/README-guidelines/#organization-level-readmes){target="_blank"} for info on organization READMES)

::: {.footer}
Learn more by exploring [GitHub Docs](https://docs.github.com/en/organizations/collaborating-with-groups-in-organizations/about-organizations){target="_blank"}. Also note the **importance of [assigning multiple organization owners](https://docs.github.com/en/organizations/managing-peoples-access-to-your-organization-with-roles/maintaining-ownership-continuity-for-your-organization){target="_blank"}**.
:::

---

## {#org-screenshot data-menu-title="Organization screenshot"} 

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/nceas-org.png")
```

::: {.footer}
The [NCEAS Organization](https://github.com/NCEAS){target="_blank"} is home to over 100 [repositories](https://github.com/orgs/NCEAS/repositories){target="_blank"}, and many [members](https://github.com/orgs/NCEAS/people){target="_blank"}, [teams](https://github.com/orgs/NCEAS/teams){target="_blank"}, and [projects](https://github.com/orgs/NCEAS/projects){target="_blank"}
:::

---

## {#use-orgs data-menu-title="When to use organizations"} 

[When should I use organizations?]{.slide-title}

<hr>

<br>

[***GitHub organizations are extremely helpful when collaborating with teams of people within a company / group. Benefits include:***]{.body-text-m}

<br>

. . . 

-  **creating a professional image** for a team or project with a unique name, brand, and / or website (MEDS Capstone projects should all have an organization e.g. [Outdoor Equity](https://github.com/outdoor-equity){target="_blank"} (MEDS 2022), [PYFOREST](https://github.com/cp-PYFOREST){target="_blank"} (MEDS 2023), [CASAschools](https://github.com/CASAschools){target="_blank"} (MEDS 2024))

. . . 

- **centralized management** of repositories, members, and settings

. . .

- **fine-grain access control** where organization owners can assign roles to individual members and members to teams, providing different levels of control over repository access


::: {.footer}
See this [community discussion](https://github.com/orgs/community/discussions/69020){target="_blank"} for more information.
:::

---

## {#ghp-start data-menu-title="GitHub Pages (start)" background="#047C90"} 

<div class="vertical-center center-text">
<p class="custom-subtitle bottombr">Host reports, documents, websites, etc. with GitHub Pages</p>
</div>

---

## {#GHP data-menu-title="GitHub Pages"} 

[GitHub Pages can be enabled for any repo]{.slide-title}

<hr>

<!-- >*"You can use GitHub Pages to host a website about yourself, your organization, or your project directly from a repository on GitHub."* -->

[You can host **one** website or rendered HTML document from any *public* GitHub repository.]{.body-text-m}

. . .

[**Hosting additional *websites* via GHP:**]{.body-text-m}

- same process as hosting your personal website (see [week 0 materials](https://ucsb-meds.github.io/creating-quarto-websites/#github-pages){target="_blank"}) 
  - [**NOTE:** you're only allowed **one** user website with the `github.io` suffix, e.g. `<username>.github.io` -- all other URLs will be structured as `<username>.github.io/<repoName>`)]{.body-text-s}

. . . 

[**Hosting a rendered HTML *document* via GHP:**]{.body-text-m}

- e.g. Quarto doc, Quarto presentation, Quarto manuscript...etc.
- rendered file must be named `index.html` and live in your repo's root directory; no other configurations necessary
- deploy from **Settings** > **Pages** > set branch to **main** and directory to **root**
- re-render `index.html`, then push to GitHub to update deployment

<!-- ::: {.footer} -->
<!-- See the [creating-quarto-websites repo](https://github.com/UCSB-MEDS/creating-quarto-websites){target="_blank"} for an example of a hosted HTML document. -->
<!-- ::: -->

---

## {#ghp-screenshot data-menu-title="GHP screenshot"} 

<br>

:::: {.columns}

::: {.column width="50%"}
```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/ghp-repo.png")
```
:::

::: {.column width="50%"}
```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/ghp-settings.png")
```
:::

::::

::: {.center-text}
The materials for [creating your personal website using Quarto](https://ucsb-meds.github.io/creating-quarto-websites/#is-quarto-necessary){target="_blank"} (above) is one example of a published document. Similarly, the slides for [customizing your Quarto website](https://ucsb-meds.github.io/customizing-quarto-websites/#/title-slide){target="_blank"} are also published using GitHub Pages.
:::

---

## {#use-GHP data-menu-title="When to use GHP"} 

[When should I use GitHub Pages?]{.slide-title}

<hr>

<br>

[***You can use GitHub Pages to host projects and resources that you want to share publicly with others (e.g. colleagues, clients, potential employers, etc.).***]{.body-text-m}

<br>

. . . 

GitHub Pages can be enabled from any public repo owned by a personal profile *or* organization.

<br>

. . .

Consider hosting instructional documentation, software user guides, reports, project websites, etc.

---

## {#gha-start data-menu-title="GitHub Actions (start)" background="#047C90"} 

<div class="vertical-center center-text">
<p class="custom-subtitle bottombr">Automate workflows with GitHub Actions</p>
</div>

---

## {#what-are-GHA data-menu-title="What are GHA?"} 

[What is GitHub Actions?]{.slide-title}

<hr>

>*"GitHub Actions (GHA) is a <sup>1</sup>continuous integration and <sup>2</sup>continuous delivery (CI/CD) platform that allows you to **automate your build, test, and deployment pipeline**."*

<br>

[**You can use GHA to automate *pretty much anything* (truly)! But some concrete examples:**]{.body-text-m}

::: {.incremental}
- building and deploying a GitHub Pages site whenever changes are pushed or merged into `main` 
- adding appropriate labels whenever someone creates a new issue in your repo
- running tests whenever code is pushed to a repo to ensure new changes don't break existing code
- running data analysis pipelines whenever new data is pushed to the repo
- running linters to ensure code adheres to a particular style guide
:::

::: {.footer}
<sup>1</sup>Continuous integration is a software practice that requires frequently committing code to a shared repository. <sup>2</sup>Continuous deployment is the practice of using automation to publish and deploy software updates. Learn more by exploring [GitHub Docs](https://docs.github.com/en/actions/about-github-actions/understanding-github-actions){target="_blank"}.
:::

---

## {#defs data-menu-title="GHA definitions"} 

[Some definitions]{.slide-title}

<hr>

```{r}
#| eval: true
#| echo: false
#| out-width: "80%"
#| fig-align: "center"
knitr::include_graphics("images/gha-runner.png")
```

::: {.incremental}
- **workflow:** a configurable automated process that will run one or more *jobs*, which are defined by a YAML file in your repo (e.g. automatically build and redeploy a GitHub Pages site)
- **event:** a specific activity in a repo that triggers a *workflow* run (e.g. pushing modified files to GitHub)
- **job:** a set of steps in a *workflow* that is executed on the same *runner;* steps are executed in order (e.g. check out repo, install Quarto, install R + dependencies, render & publish Quarto project)
- **runner:** a server that runs your *workflows* when they're triggered
:::

::: {.footer}
Read more on [GitHub Docs](https://docs.github.com/en/actions/about-github-actions/understanding-github-actions){target="_blank"}
:::

---

## {#gha-screenshot data-menu-title="GHA screenshot"} 

<br>

:::: {.columns}

::: {.column width="50%"}
```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/gha-workflow.png")
```
:::

::: {.column width="50%"}
```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/gha-log.png")
```
:::

::::

::: {.center-text}
(right) An example GitHub Actions workflow for building and deploying a Quarto website. 

(left) The repository's Actions tab, where you can monitor the status of your GitHub Actions workflows.
:::

---

## {#use-GHA data-menu-title="When to use GHA"} 

[When should I use GitHub Actions?]{.slide-title}

<hr>

<br>

[***Consider using GitHub Actions whenever you want to automate tasks like building, testing, and deploying code from your GitHub repository.***]{.body-text-m}

<br>

. . . 

Setting up a GHA workflow from scratch can be a bit intimidating, so it's great to **make use of [workflow templates](https://docs.github.com/en/actions/writing-workflows/using-workflow-templates), which can be used as-is or modified for your custom workflow**. You can sometimes also find templates provided by other tools for automating specific tasks (e.g. Quarto provides templates for executing [R](https://quarto.org/docs/publishing/github-pages.html#example-knitr-with-renv){target="_blank"} or [Python](https://quarto.org/docs/publishing/github-pages.html#example-jupyter-with-venv){target="_blank"} code and rendering output to GitHub Pages).

<br>

. . . 

It can be helpful to **read a bit more about the [YAML syntax used in workflow files](https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions){target="_blank"}** before diving into creating or modifying your own workflows.

---

## {#gha-steps-start data-menu-title="GitHub Actions steps (start)" background="#047C90"} 

<div class="vertical-center center-text">
<p class="custom-subtitle bottombr">BONUS: An example GHA workflow for automating Quarto website builds and deployments</p>
</div>

::: {.footer}
[I'm very much a newbie when it comes to GitHub Actions, but I've found Melissa Van Bussel's video on [Publishing a Quarto Project with GitHub Pages + GitHub Actions](https://www.youtube.com/watch?v=arzBRW5XIkg){target="_blank"} to be a really helpful place to start (and it inspired this demo, along with discussion with [Camila Vargas Poulsen](https://camilavargasp.github.io/){target="_blank"} & [Nick Lyon](https://njlyon0.github.io/){target="_blank"}).]{.baby-blue-text}
:::

---

## {#mysite-example data-menu-title="mysite example"}

[Let's demonstrate with `mysite` (from [week 0](https://ucsb-meds.github.io/creating-quarto-websites/#create-website-scaffolding){target="_blank"})]{.slide-title2}

<hr>

<br>

The next few slides walk through **setting up a GitHub Action that automates the building and deployment of a basic Quarto website, which may contain R code** (e.g. rendered as part of a blog post). *Up until now, I've been manually building `mysite` locally, then pushing the rendered files (in the `docs/` folder) to GitHub, where GitHub Pages deploys from.*

<br>

. . . 

Rather than building a workflow from scratch, **we'll use a [workflow template](https://quarto.org/docs/publishing/github-pages.html#example-knitr-with-renv)** provided in the Quarto documentation.

<br>

. . . 

[**We'll follow these general steps:**]{.body-text-m} 

1. Set up a virtual environment for our project
2. Create a `gh-pages` branch, where our rendered website files will be stored
3. Add a GHA workflow to our repository
4. Reconfigure GitHub Pages to serve our website from our `gh-pages` branch

---

## {#runners data-menu-title="A note about runners"}

[NOTE: GHA workflows will (likely) take longer than local builds]{.slide-title2}

<hr>

<br>

Whenever an event triggers a GHA workflow, GitHub spins up a [virtual machine](https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners){target="_blank"} (**i.e. a runner**) where our defined jobs are executed. You can think of a runner as a brand new (mostly blank slate) computer. **We'll make use of a GitHub-hosted runner**, though you can host your own runners. 

<br>

. . . 

[**You must provide all necessary pieces of software to this runner (e.g. R, RStudio, Quarto, repo code, etc.). You do so in your workflow script.**]{.body-text-m}

<br>

. . . 

As a result, **an automated GHA workflow will take more time to complete** than if you were to build your website locally, then push all rendered files (in a `docs/` folder) to GitHub for GitHub Pages to deploy. This is, in part, because you already have all necessary pieces of software for rendering your website installed on your local machine.

---

## {#virt-env data-menu-title="1. virtual environmnet"}

[1. Set up a virtual environment]{.slide-title}

<hr>

<br>

We'll want to set up a virtual environment for our project to ensure that our code is reproducible across different machines (including both our local development environment *and* the GitHub-hosted runner, where our workflow will be executed). Here, we'll do so using the [`{renv}` package](https://rstudio.github.io/renv/index.html){target="_blank"}.

<br>

[**Steps:**]{.body-text-m}

1. install `{renv}` (if necessary)
2. run `renv::init()` to initialize `renv` in our existing Quarto project
3. say `Y` when it asks if you want to proceed
4. install `{yaml}`, if prompted

<!-- (e.g. `Warning: The 'yaml' package is required to parse dependencies within Quarto Markdown files`) -->

::: {.footer}
(Re)Familiarizing yourself with the [`{renv}` workflow](https://rstudio.github.io/renv/index.html#workflow){target="_blank"} is helpful here!
:::

---

## {#ghp-branch data-menu-title="2. GHP branch"}

[2. Create a `gh-pages` branch]{.slide-title}

<hr>

<br>

The `gh-pages` branch is a special branch that you can use to store your built website (i.e. only your website's *rendered* files, *not* the source files (e.g. any `.qmd`s)). We'll eventually configure GitHub Pages to deploy our website from this `gh-pages` branch.

<br>

[**Steps:**]{.body-text-m}

1. return to your GitHub repository
2. click on branch drop down button > click **View all branches** > click the green **New branch** button > in the New branch name field, type `gh-pages` > click the green **Create new branch**

---

## {#gha-workflow data-menu-title="3. GHA workflow"}

[3. Add a GHA workflow to the repository]{.slide-title}

<hr>

Rather than building a workflow from scratch, we can use the [one conveniently provided in the Quarto documentation](https://quarto.org/docs/publishing/github-pages.html#example-knitr-with-renv){target="_blank"}!

<br>

[**Steps:**]{.body-text-m}

1. return to RStudio
2. add a folder named `.github` in your root directory (you can use the Terminal or the New Folder button)
3. inside `.github/` create another folder called `workflows`
4. inside `workflows/` add a file named `publish.yml` (you can use the Terminal or New File > Text file button)
5. copy the workflow content [from the Quarto documentation](https://quarto.org/docs/publishing/github-pages.html#example-knitr-with-renv){target="_blank"} into `publish.yml`
6. remove (or comment out) `output-dir: docs` from `_quarto.yml` 
7. delete the `docs/` folder (we'll no longer be rendering to / deploying from this directory)
8. add, commit, and push everything to GitHub

---

## {#reconfi-ghp data-menu-title="4. Reconfigure GHP"}

[4. Reconfigure GitHub Pages]{.slide-title}

<hr>

<br>

After pushing your updated files to GitHub, you will probably receive an automated email with the Subject line: **[yourUserName/repoName] Run failed: pages build and deployment** -- this is because GitHub Pages is currently looking to redeploy your site from the `docs/` folder (we've just removed this) on the `main` branch. 

Our final step is to reconfigure our GitHub Pages to now serve our rendered website from the `gh-pages` branch.

<br>

[**Steps:**]{.body-text-m}

1. return to your GitHub repository
2. go to **Settings** > **Pages** > switch branch from `main` to `gh-pages` and from `/docs` to `/(root)` > click **Save** > check out Actions tab while your site redeploys (remember, this will take a bit longer than you're used to!)

---

## {#push-or-PR data-menu-title="Updates on push or PR"}

[Try out your GHA!]{.slide-title}

<hr>

<br>

[**Test it out!**]{.body-text-m}

1. make a change to your website (this could be as minor as adding some text to one of your pages)
2. add, commit, push your modified files (NOTE: do not build your website!)
3. head to your repository's Actions tab to watch the status of your rebuild / redeployment

<br>

Your Action will also be triggered if you merge a pull request into `main`.

---

##  {#end-break data-menu-title="# Break / END #" background="#047C90"}

<div class="page-center vertical-center">
<p class="custom-subtitle bottombr">{{< fa mug-hot title="a mug with steam rising out the top" >}} Take a Break</p>
<p class="caption-text">*~ Portfolio share outs next! ~*</p>
</div>

```{r}
countdown::countdown(
  minutes = 5,
  # left = 0, right = 0,
  # Fanfare when it's over
  play_sound = TRUE,
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```


