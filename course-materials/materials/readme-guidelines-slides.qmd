---
format: 
  revealjs:
    slide-number: true
    # code-link: true
    highlight-style: a11y
    chalkboard: true
    theme: 
      - ../../meds-slides-styles.scss
editor_options: 
  chunk_output_type: console
---

## {#title-slide data-menu-title="Title Slide" background="#053660"} 

[EDS 296: Data Science Portfolios]{.custom-title}

[*README Guidelines*]{.custom-subtitle}

<hr class="hr-teal">

[November 1st, 2024]{.custom-subtitle3}

---

## {#official-guidelines data-menu-title="See official guidelines"} 

[Reference the "official" README guidelines]{.slide-title}

<hr>

These slides are adapted from the **[MEDS README Guidelines](https://ucsb-meds.github.io/README-guidelines/)** (mostly because it helps me stay on track while teaching {{< fa face-smile-beam title="a smiling face with squinty eyes" >}}). Please be sure to reference the "official" guidelines document when you return to these in the future.

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/readme-guidelines.png")
```

::: {.center-text .gray-text .body-text-s}
<https://ucsb-meds.github.io/README-guidelines/>
:::

---

## {#readme data-menu-title="What is a README?"} 

[READMEs provide essential project info]{.slide-title}

<hr>

:::: {.columns}
::: {.column width="50%"}

<br>

- Date back to [at least 1974](https://medium.com/@NSomar/readme-md-history-and-components-a365aff07f10) with the invention of [PDP-10](https://en.wikipedia.org/wiki/PDP-10)
- Text files that live in project directories (often the *root* directory)
- Include info about the software / product to users, developers, and / or contributors
- ALL CAPS because [ASCII](https://en.wikipedia.org/wiki/ASCII) system sorts upppercase before lowercase letters (`ls` lists READMEs near the top)
- GitHub displays a repo's (root directory) README on its landing page
  - written in Markdown
:::
::: {.column width="50%"}
```{r}
#| eval: true
#| echo: false
#| out-width: "55%"
#| fig-align: "center"
knitr::include_graphics("images/drink-me.png")
```
::: {.center-text .body-text-s .gray-text}
Some have suggested that the README name is a play on Lewis Carroll's "Eat Me" and "Drink Me" scene from Alice's Adventures in Wonderland. Image source: [150 years of "Alice in Wonderland"](https://www.cbsnews.com/pictures/150-years-of-alice-in-wonderland/)
:::
:::
::::

---

## {#always-include-readme data-menu-title="Always include a README"} 

[You should always include a README]{.slide-title}

<hr>

GitHub makes this easy! Check the "Add a README file" box each time you create a repo on GitHub:

```{r}
#| eval: true
#| echo: false
#| out-width: "60%"
#| fig-align: "center"
knitr::include_graphics("images/initialize-readme.png")
```

If you're creating a repo locally first, add a README to your project's root directory using the command, `touch README.md` (in the Terminal), or click **New File** > **Text File** > type `README.md` > **OK** (in RStudio's Files pane).

<br>

. . . 

::: {.center-text .body-text-m .teal-text}
**What you include in a given README will look different depending on the project.**
:::

. . . 

::: {.center-text .body-text-m .teal-text}
**But there are some guidelines you should follow...**
:::

---

## {#always-include data-menu-title="Always include (MEDS)"} 

[Things you should *always include* in your repo READMEs]{.slide-title}

<hr>

::: {.center-text .body-text-m}
***These 6 core elements are required for all MEDS-related homework assignments and projects.***
:::

1. A short, but descriptive title
2. A brief explanation of the repository's purpose
3. A concise description of what's housed in the repository
4. Details regarding data access
5. A list of authors or contributors (for collaborative work)
6. References / acknowledgements

. . . 

::: {.center-text .teal-text}
**Let's work on adding these elements to an existing MEDS assignment repository. *Navigate to your chosen repo now.*** 

*(Example screenshots from <https://github.com/samanthacsik/strava-dashboard>)*
:::

---

## {#1a-title data-menu-title="1a. title"} 

[1. A short, but descriptive title]{.slide-title}

<hr>

A README’s title is set to the repository name by default - change this!

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/strava-title.png")
```

::: {.center-text .gray-text .body-text-s}
By default, this README title was **strava-dashboard** (the name of the repo) -- here, I've updated it to something a bit more descriptive.
:::

---

## {#1b-title data-menu-title="1b. title"} 

[1. A short, but descriptive title]{.slide-title}

<hr>

<br>
<br>
<br>
<br>
<br>

::: {.center-text .teal-text .body-text-xl}
Update your repo's README title, then share with your neighbor
:::

```{r}
countdown::countdown(
  minutes = 1,
  # right = 0,
  # Fanfare when it's over
  play_sound = TRUE,
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

---

## {#2a-purpose data-menu-title="2a. purpose"} 

[2. A brief explanation of the repository's purpose]{.slide-title}

<hr>

Paragraphs or a bulleted list are both acceptable options. You may also include an image or logo that represents the project.

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/strava-purpose.png")
```

::: {.center-text .gray-text .body-text-s}
In this example, I include a bulleted list that describes the (personal and professional) motivations for this project.
:::

---

## {#2b-purpose data-menu-title="2b. purpose"} 

[2. A brief explanation of the repository's purpose]{.slide-title}

<hr>

<br>
<br>
<br>
<br>
<br>

::: {.center-text .teal-text .body-text-xl}
Add a brief description to your repo's README, then share with your neighbor
:::

```{r}
countdown::countdown(
  minutes = 3,
  # right = 0,
  # Fanfare when it's over
  play_sound = TRUE,
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

---

## {#3a-files-housed data-menu-title="3. files housed"} 

[3a. A concise description of what's housed in the repository]{.slide-title}

<hr>

This includes information about the repository structure or file organization.

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/strava-files.png")
```

::: {.center-text .gray-text .body-text-s}
A repo "map" of the folder structure and important / necessary files for making this shiny app run. 

Open and close a code block with three backticks at the start and end. Use the pipe, `|`, along with these (somewhat odd) characters, `├──` & `└──`, to construct a folder / file map of your repo.
:::

---

## {#3a-files-org data-menu-title="3. organized files"} 

[An aside: remember to organize your files!]{.slide-title}

<hr>

This is also a reminder to create an intuitive folder structure within your repository! Reorganize files as needed / appropriate. Here's one example of an intuitive repo structure -- this will vary depending on your project:

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/repo-structure.png")
```

```{md}
#| eval: false
#| #| echo: false
.
├── data/ 
│   └── raw/
│   └── processed/ 
|
├── scratch/ 
│   └── trying-things-out.R 
|
├── analysis/                  
│   └── data-cleaning.R 
│   └── analysis.R
│   └── functions/
│       └── fxn-A.R
│       └── fxn-B.R
|
├── outputs/ 
│   └── plots/
|
├── reports/ 
│   └── final-report.qmd 
|
└── my-project.RProj
```

---

## {#3b-files-housed data-menu-title="3. files housed"} 

[3b. A concise description of what's housed in the repository]{.slide-title}

<hr>

<br>
<br>
<br>
<br>

::: {.center-text .teal-text .body-text-xl}
Add a section to describe the contents of your repo (you may choose to create a repo map), then share with your neighbor.
:::

```{r}
countdown::countdown(
  minutes = 4,
  # right = 0,
  # Fanfare when it's over
  play_sound = TRUE,
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

---

## {#4a-data-access data-menu-title="4. data access"} 

[4a. Details regarding data access]{.slide-title}

<hr>

Any necessary information on where data lives (e.g. is it housed in the repo, on a server, in a library / package etc.) and how to access it in order to run the code

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/strava-data.png")
```

::: {.center-text .gray-text .body-text-s}
Information on what tools (i.e. `{rStrava}`) I used to scrape my data, where that data retrieval / wrangling occurs, and where I save my cleaned data to. Also **note** that I mention a **wiki** -- more on that soon.
:::

---

## {#4b-data-access data-menu-title="4. data access"} 

[4a. Details regarding data access]{.slide-title}

<hr>

<br>
<br>
<br>
<br>
<br>

::: {.center-text .teal-text .body-text-xl}
Add any important information regarding your data source(s) / access, then share with your neighbor.
:::

```{r}
countdown::countdown(
  minutes = 3,
  # right = 0,
  # Fanfare when it's over
  play_sound = TRUE,
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

---

## {#5a-authors data-menu-title="5. authors"} 

[5a. A list of authors or contributors (for collaborative work)]{.slide-title}

<hr>

Consider hyperlinking collaborators’ GitHub profiles or other professional profile

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/strava-contributors.png")
```

::: {.center-text .gray-text .body-text-s}
A not totally necessary contributors section (I'm the only contributor, so far).
:::

---

## {#5b-authors data-menu-title="5. authors"} 

[5b. A list of authors or contributors (for collaborative work)]{.slide-title}

<hr>

<br>
<br>
<br>

::: {.center-text .teal-text .body-text-xl}
If you chose a repository that contains collaborative work, add authorship information. Then share with your neighbor.
:::

```{r}
countdown::countdown(
  minutes = 2,
  # right = 0,
  # Fanfare when it's over
  play_sound = TRUE,
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

---

## {#6a-refs data-menu-title="6. references"} 

[6a. References / acknowledgements]{.slide-title}

<hr>

Add references in an appropriate, consistent format (including links). Don’t forget to add references for data sets too!

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/strava-references.png")
```

::: {.center-text .gray-text .body-text-s}
My acknowledgements section includes links to a variety of blog posts, articles, and software that I referenced / used while building my dashboard. It also, importantly (though not at all necessary), includes a pup pic.
:::

---

## {#6b-refs data-menu-title="6. references"} 

[6b. References]{.slide-title}

<hr>

<br>
<br>
<br>
<br>
<br>

::: {.center-text .teal-text .body-text-xl}
Add any necessary references / acknowledgements, then share with your neighbor.
:::

```{r}
countdown::countdown(
  minutes = 2,
  # right = 0,
  # Fanfare when it's over
  play_sound = TRUE,
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```

---

## {#concise data-menu-title="Keep READMEs concise"} 

[Keep READMEs as concise as possible]{.slide-title}

<hr>

<br>
<br>
<br>

::: {.body-text-m}
>“The lack of a README is a powerful red flag, but even a lengthy README is not indicative of there being high quality. **The ideal README is as short as it can be without being any shorter.** Detailed documentation is good – make separate pages for it! – but keep your README succinct.”
:::

::: {.right-align-text}
-[Kira Oakley](https://github.com/hackergrrl) in her article, [Art of README](https://github.com/hackergrrl/art-of-readme?tab=readme-ov-file#readme)
:::

---

## {#wikis data-menu-title="Wikis for long-form docs"} 

[Use wikis to share long-form documentation]{.slide-title2}

<hr>

From [GitHub Docs](https://docs.github.com/en/communities/documenting-your-project-with-wikis/about-wikis): 

>"You can use your repository’s wiki to share long-form content about your project, such as how to use it, how you designed it, or its core principles"

:::: {.columns}

::: {.column width="50%"}
```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/openscapes-wiki.png")
```

::: {.center-text .gray-text .body-text-s}
The [Openscapes website wiki](https://github.com/Openscapes/website-new)
:::
:::

::: {.column width="50%"}
- move any documentation-style info from your README to a wiki, as appropriate
- you can link to wiki pages from your README
- each wiki page should focus on a single topic
- **add a wiki by clicking *Wiki* > *Create the first page* (creates landing page) > then add additional pages**
:::

::::


---

## {#up-next data-menu-title="Up next"} 

[Up next, account-level READMEs]{.slide-title}

<hr>

READMEs aren't just for repositories -- we can create account-level READMEs to introduce individual users or organizations:

<br>

:::: {.columns}

::: {.column width="50%"}

::: {.center-text .gray-text .body-text-s}
A GitHub profile README
:::

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/sam-readme.png")
```
:::

::: {.column width="50%"}

::: {.center-text .gray-text .body-text-s}
A organization README
:::

```{r}
#| eval: true
#| echo: false
#| out-width: "100%"
#| fig-align: "center"
knitr::include_graphics("images/org-readme.png")
```
:::

::::
